<?php

/**
 * @file
 * Contains ethereum_smartcontract.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\ethereum_smartcontract\Entity as SmartContractEntity;

/**
 * Implements hook_help().
 */
function ethereum_smartcontract_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ethereum_smartcontract module.
    case 'help.page.ethereum_smartcontract':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Entity to manage smart contracts.') . '</p>';
      return $output;

    default:
  }
}


/**
 * Load smart contracts "dynamically" (they are still cached) based on configuration.
 *
 * @return array $libraries
 *   An associative array of libraries registered by $extension. Keyed by
 *   internal library name and passed by reference.
 */
function ethereum_smartcontract_library_info_build() {
  $libraries = array();

  // Get smartcontract Entities.
  $contracts = \Drupal::entityTypeManager()->getStorage('smartcontract')->loadMultiple();

  foreach ($contracts as $contract) {
    $id = $contract->id();
    if (!isset($libraries[$id])) {

      $libraries[$id] = array(
        'version' => 'VERSION',
        'js' => array($contract->contract_js => array()),
        'type' => 'asset',
      );
    }
  }
  return $libraries;
}
